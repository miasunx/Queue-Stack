#import
from scipy import stats

#t-test of test vs control for our target metric 
test = stats.ttest_ind(data.loc[data['test'] == 1]['pages_visited'], data.loc[data['test'] == 0]['pages_visited'], equal_var=False)
  
#t statistics
print(test.statistic)

#p-value
print(test.pvalue)

#print test results
if (test.pvalue>0.05):
  print ("Non-significant results")
elif (test.statistic>0):
  print ("Statistically better results")
else:
  print ("Statistically worse results")
  
#segment users into new vs old. We define new as those for which the test/control experience was the same as their sign-up date
#test old users and new users separately
  
#old users
ab_test_old = stats.ttest_ind(data.loc[(data['test'] == 1) & (data['signup_date']!=data['test_date'])]['pages_visited'], 
                              data.loc[(data['test'] == 0) & (data['signup_date']!=data['test_date'])]['pages_visited'], 
                              equal_var=False)
#t statistics
print(ab_test_old.statistic)
#p-value
print(ab_test_old.pvalue)

#we divide by 2 p-value significance level because we have run two tests. i.e. we are using the Bonferroni correction
#print test results
if (ab_test_old.pvalue>0.05/2):
  print ("Returning users: Non-significant results")
elif (ab_test_old.statistic>0):
  print ("Returning users: Statistically better results")
else:
  print ("Returning users: Statistically worse results")
  
  
#new users
ab_test_new = stats.ttest_ind(data.loc[(data['test'] == 1) & (data['signup_date']==data['test_date'])]['pages_visited'], 
                              data.loc[(data['test'] == 0) & (data['signup_date']==data['test_date'])]['pages_visited'], 
                              equal_var=False)
#t statistics
print(ab_test_new.statistic)
#p-value
print(ab_test_new.pvalue)

#we divide by 2 p-value significance level because we have run two tests. i.e. we are using the Bonferroni correction
#print test results
if (ab_test_new.pvalue>0.05/2):
  print ("New users: Non-significant results")
elif (ab_test_new.statistic>0):
  print ("New users: Statistically better results")
else:
  print ("New users: Statistically worse results")
